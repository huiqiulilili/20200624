static class Element {
        int level;
        Node node;
    }
    public static List<List<Character>> levelOrder(Node root){
        List<List<Character>> reList = new LinkedList<>();
        if (root == null) {
            return reList;
        }
        Queue<Element> queue = new LinkedList<>();
        Element e = new Element();
        e.level = 0;
        e.node = root;
        queue.add(e);

        while (!queue.isEmpty()) {
            Element front = queue.poll();

            if (front.level == reList.size()) {
                reList.add(new LinkedList<>());
            }
            reList.get(front.level).add(front.node.value);

            if (front.node.left != null) {
                Element l = new Element();
                l.node = front.node.left;
                l.level = front.level + 1;
                queue.add(l);
            }
            if (front.node.right != null) {
                Element r = new Element();
                r.node = front.node.right;
                r.level = front.level + 1;
                queue.add(r);
            }
        }
        return reList;
    }
